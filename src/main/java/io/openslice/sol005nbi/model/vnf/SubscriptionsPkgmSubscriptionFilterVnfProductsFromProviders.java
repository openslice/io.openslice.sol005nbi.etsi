/*
 * SOL005 - VNF Package Management Interface
 * SOL005 - VNF Package Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.vnf;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-20T00:01:04.793+02:00[Europe/Athens]")
public class SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders {
  @JsonProperty("vnfProvider")
  private String vnfProvider = null;

  @JsonProperty("vnfProducts")
  private List<SubscriptionsPkgmSubscriptionFilterVnfProducts> vnfProducts = null;

  @JsonProperty("vnfdId")
  private List<String> vnfdId = null;

  @JsonProperty("vnfPkgId")
  private List<String> vnfPkgId = null;

  /**
   * \&quot;The enumeration PackageOperationalStateType shall  comply with the provisions defined in Table 9.5.4.4-1.\&quot; Acceptable values are: -ENABLED - The VNF package is enabled, i.e. it can be used for instantiation of new VNF instances. -DISABLED - The VNF package is disabled, i.e. it cannot be used for further VNF instantiation requests (unless and until the VNF package is re-enabled). 
   */
  public enum OperationalStateEnum {
    ENABLED("ENABLED"),
    DISABLED("DISABLED");

    private String value;

    OperationalStateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static OperationalStateEnum fromValue(String text) {
      for (OperationalStateEnum b : OperationalStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("operationalState")
  private List<OperationalStateEnum> operationalState = null;

  /**
   * \&quot;The enumeration PackageUsageStateType shall comply with the provisions. Acceptable values are: -IN_USE - VNF instances instantiated from this VNF package exist. -NOT_IN_USE - No existing VNF instance is instantiated from this VNF package\&quot;       
   */
  public enum UsageStateEnum {
    IN_USE("IN_USE"),
    NOT_IN_USE("NOT_IN_USE");

    private String value;

    UsageStateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static UsageStateEnum fromValue(String text) {
      for (UsageStateEnum b : UsageStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("usageState")
  private List<UsageStateEnum> usageState = null;

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders vnfProvider(String vnfProvider) {
    this.vnfProvider = vnfProvider;
    return this;
  }

   /**
   * Name of the VNFprovider to match. 
   * @return vnfProvider
  **/
  @Schema(required = true, description = "Name of the VNFprovider to match. ")
  public String getVnfProvider() {
    return vnfProvider;
  }

  public void setVnfProvider(String vnfProvider) {
    this.vnfProvider = vnfProvider;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders vnfProducts(List<SubscriptionsPkgmSubscriptionFilterVnfProducts> vnfProducts) {
    this.vnfProducts = vnfProducts;
    return this;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders addVnfProductsItem(SubscriptionsPkgmSubscriptionFilterVnfProducts vnfProductsItem) {
    if (this.vnfProducts == null) {
      this.vnfProducts = new ArrayList<>();
    }
    this.vnfProducts.add(vnfProductsItem);
    return this;
  }

   /**
   * If present, match VNF packages that contain VNF products with certain product names, from one particular provider. 
   * @return vnfProducts
  **/
  @Schema(description = "If present, match VNF packages that contain VNF products with certain product names, from one particular provider. ")
  public List<SubscriptionsPkgmSubscriptionFilterVnfProducts> getVnfProducts() {
    return vnfProducts;
  }

  public void setVnfProducts(List<SubscriptionsPkgmSubscriptionFilterVnfProducts> vnfProducts) {
    this.vnfProducts = vnfProducts;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders vnfdId(List<String> vnfdId) {
    this.vnfdId = vnfdId;
    return this;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders addVnfdIdItem(String vnfdIdItem) {
    if (this.vnfdId == null) {
      this.vnfdId = new ArrayList<>();
    }
    this.vnfdId.add(vnfdIdItem);
    return this;
  }

   /**
   * Match VNF packages with a VNFD identifier listed in the attribute. 
   * @return vnfdId
  **/
  @Schema(description = "Match VNF packages with a VNFD identifier listed in the attribute. ")
  public List<String> getVnfdId() {
    return vnfdId;
  }

  public void setVnfdId(List<String> vnfdId) {
    this.vnfdId = vnfdId;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders vnfPkgId(List<String> vnfPkgId) {
    this.vnfPkgId = vnfPkgId;
    return this;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders addVnfPkgIdItem(String vnfPkgIdItem) {
    if (this.vnfPkgId == null) {
      this.vnfPkgId = new ArrayList<>();
    }
    this.vnfPkgId.add(vnfPkgIdItem);
    return this;
  }

   /**
   * Match VNF packages with a package identifier listed in the attribute. May be present if the \&quot;notificationTypes\&quot; attribute contains the value \&quot;VnfPackageChangeNotification\&quot;, and shall be absent otherwise. 
   * @return vnfPkgId
  **/
  @Schema(description = "Match VNF packages with a package identifier listed in the attribute. May be present if the \"notificationTypes\" attribute contains the value \"VnfPackageChangeNotification\", and shall be absent otherwise. ")
  public List<String> getVnfPkgId() {
    return vnfPkgId;
  }

  public void setVnfPkgId(List<String> vnfPkgId) {
    this.vnfPkgId = vnfPkgId;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders operationalState(List<OperationalStateEnum> operationalState) {
    this.operationalState = operationalState;
    return this;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders addOperationalStateItem(OperationalStateEnum operationalStateItem) {
    if (this.operationalState == null) {
      this.operationalState = new ArrayList<>();
    }
    this.operationalState.add(operationalStateItem);
    return this;
  }

   /**
   * Match VNF packages with a package identifier listed in the attribute. May be present if the \&quot;notificationTypes\&quot; attribute contains the value \&quot;VnfPackageChangeNotification\&quot;, and shall be absent otherwise. 
   * @return operationalState
  **/
  @Schema(description = "Match VNF packages with a package identifier listed in the attribute. May be present if the \"notificationTypes\" attribute contains the value \"VnfPackageChangeNotification\", and shall be absent otherwise. ")
  public List<OperationalStateEnum> getOperationalState() {
    return operationalState;
  }

  public void setOperationalState(List<OperationalStateEnum> operationalState) {
    this.operationalState = operationalState;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders usageState(List<UsageStateEnum> usageState) {
    this.usageState = usageState;
    return this;
  }

  public SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders addUsageStateItem(UsageStateEnum usageStateItem) {
    if (this.usageState == null) {
      this.usageState = new ArrayList<>();
    }
    this.usageState.add(usageStateItem);
    return this;
  }

   /**
   * Match particular usage state of the on-boarded VNF package. May be present if the \&quot;notificationTypes\&quot; attribute contains the value \&quot;VnfPackageChangeNotification\&quot;, and shall be absent otherwise. 
   * @return usageState
  **/
  @Schema(description = "Match particular usage state of the on-boarded VNF package. May be present if the \"notificationTypes\" attribute contains the value \"VnfPackageChangeNotification\", and shall be absent otherwise. ")
  public List<UsageStateEnum> getUsageState() {
    return usageState;
  }

  public void setUsageState(List<UsageStateEnum> usageState) {
    this.usageState = usageState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders = (SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders) o;
    return Objects.equals(this.vnfProvider, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.vnfProvider) &&
        Objects.equals(this.vnfProducts, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.vnfProducts) &&
        Objects.equals(this.vnfdId, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.vnfdId) &&
        Objects.equals(this.vnfPkgId, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.vnfPkgId) &&
        Objects.equals(this.operationalState, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.operationalState) &&
        Objects.equals(this.usageState, subscriptionsPkgmSubscriptionFilterVnfProductsFromProviders.usageState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vnfProvider, vnfProducts, vnfdId, vnfPkgId, operationalState, usageState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionsPkgmSubscriptionFilterVnfProductsFromProviders {\n");
    
    sb.append("    vnfProvider: ").append(toIndentedString(vnfProvider)).append("\n");
    sb.append("    vnfProducts: ").append(toIndentedString(vnfProducts)).append("\n");
    sb.append("    vnfdId: ").append(toIndentedString(vnfdId)).append("\n");
    sb.append("    vnfPkgId: ").append(toIndentedString(vnfPkgId)).append("\n");
    sb.append("    operationalState: ").append(toIndentedString(operationalState)).append("\n");
    sb.append("    usageState: ").append(toIndentedString(usageState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
