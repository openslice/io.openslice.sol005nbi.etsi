/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents information about a link port of a VL instance. It shall comply with the provisions defined in Table 6.5.3.55-1. 
 */
@Schema(description = "This type represents information about a link port of a VL instance. It shall comply with the provisions defined in Table 6.5.3.55-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceLinkPort {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("resourceHandle")
  private NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle resourceHandle = null;

  @JsonProperty("nsCpHandle")
  private List<NsInstancesNsInstanceNsCpHandle> nsCpHandle = null;

  public NsInstancesNsInstanceLinkPort id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return id
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NsInstancesNsInstanceLinkPort resourceHandle(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle resourceHandle) {
    this.resourceHandle = resourceHandle;
    return this;
  }

   /**
   * Get resourceHandle
   * @return resourceHandle
  **/
  @Schema(required = true, description = "")
  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle getResourceHandle() {
    return resourceHandle;
  }

  public void setResourceHandle(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle resourceHandle) {
    this.resourceHandle = resourceHandle;
  }

  public NsInstancesNsInstanceLinkPort nsCpHandle(List<NsInstancesNsInstanceNsCpHandle> nsCpHandle) {
    this.nsCpHandle = nsCpHandle;
    return this;
  }

  public NsInstancesNsInstanceLinkPort addNsCpHandleItem(NsInstancesNsInstanceNsCpHandle nsCpHandleItem) {
    if (this.nsCpHandle == null) {
      this.nsCpHandle = new ArrayList<>();
    }
    this.nsCpHandle.add(nsCpHandleItem);
    return this;
  }

   /**
   * Identifier of the CP/SAP instance to be connected to this link port. The value refers to a vnfExtCpInfo item in the VnfInstance, or a pnfExtCpInfo item in the PnfInfo, or a sapInfo item in the NS instance. There shall be at most one link port associated with any connection point instance. 
   * @return nsCpHandle
  **/
  @Schema(description = "Identifier of the CP/SAP instance to be connected to this link port. The value refers to a vnfExtCpInfo item in the VnfInstance, or a pnfExtCpInfo item in the PnfInfo, or a sapInfo item in the NS instance. There shall be at most one link port associated with any connection point instance. ")
  public List<NsInstancesNsInstanceNsCpHandle> getNsCpHandle() {
    return nsCpHandle;
  }

  public void setNsCpHandle(List<NsInstancesNsInstanceNsCpHandle> nsCpHandle) {
    this.nsCpHandle = nsCpHandle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceLinkPort nsInstancesNsInstanceLinkPort = (NsInstancesNsInstanceLinkPort) o;
    return Objects.equals(this.id, nsInstancesNsInstanceLinkPort.id) &&
        Objects.equals(this.resourceHandle, nsInstancesNsInstanceLinkPort.resourceHandle) &&
        Objects.equals(this.nsCpHandle, nsInstancesNsInstanceLinkPort.nsCpHandle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, resourceHandle, nsCpHandle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceLinkPort {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    resourceHandle: ").append(toIndentedString(resourceHandle)).append("\n");
    sb.append("    nsCpHandle: ").append(toIndentedString(nsCpHandle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
