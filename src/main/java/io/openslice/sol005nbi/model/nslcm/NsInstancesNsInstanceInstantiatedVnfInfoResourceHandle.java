/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents the information that allows addressing a virtualised resource that is used by a VNF instance or by an NS instance. Information about the resource is available from the VIM. 
 */
@Schema(description = "This type represents the information that allows addressing a virtualised resource that is used by a VNF instance or by an NS instance. Information about the resource is available from the VIM. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle {
  @JsonProperty("vimId")
  private String vimId = null;

  @JsonProperty("resourceProviderId")
  private String resourceProviderId = null;

  @JsonProperty("resourceId")
  private String resourceId = null;

  @JsonProperty("vimLevelResourceType")
  private String vimLevelResourceType = null;

  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle vimId(String vimId) {
    this.vimId = vimId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return vimId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getVimId() {
    return vimId;
  }

  public void setVimId(String vimId) {
    this.vimId = vimId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle resourceProviderId(String resourceProviderId) {
    this.resourceProviderId = resourceProviderId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return resourceProviderId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getResourceProviderId() {
    return resourceProviderId;
  }

  public void setResourceProviderId(String resourceProviderId) {
    this.resourceProviderId = resourceProviderId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. 
   * @return resourceId
  **/
  @Schema(required = true, description = "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. ")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle vimLevelResourceType(String vimLevelResourceType) {
    this.vimLevelResourceType = vimLevelResourceType;
    return this;
  }

   /**
   * Type of the resource in the scope of the VIM or the resource provider. The value set of the \&quot;vimLevelResourceType\&quot; attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. 
   * @return vimLevelResourceType
  **/
  @Schema(description = "Type of the resource in the scope of the VIM or the resource provider. The value set of the \"vimLevelResourceType\" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. ")
  public String getVimLevelResourceType() {
    return vimLevelResourceType;
  }

  public void setVimLevelResourceType(String vimLevelResourceType) {
    this.vimLevelResourceType = vimLevelResourceType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle nsInstancesNsInstanceInstantiatedVnfInfoResourceHandle = (NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle) o;
    return Objects.equals(this.vimId, nsInstancesNsInstanceInstantiatedVnfInfoResourceHandle.vimId) &&
        Objects.equals(this.resourceProviderId, nsInstancesNsInstanceInstantiatedVnfInfoResourceHandle.resourceProviderId) &&
        Objects.equals(this.resourceId, nsInstancesNsInstanceInstantiatedVnfInfoResourceHandle.resourceId) &&
        Objects.equals(this.vimLevelResourceType, nsInstancesNsInstanceInstantiatedVnfInfoResourceHandle.vimLevelResourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vimId, resourceProviderId, resourceId, vimLevelResourceType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle {\n");
    
    sb.append("    vimId: ").append(toIndentedString(vimId)).append("\n");
    sb.append("    resourceProviderId: ").append(toIndentedString(resourceProviderId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    vimLevelResourceType: ").append(toIndentedString(vimLevelResourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
