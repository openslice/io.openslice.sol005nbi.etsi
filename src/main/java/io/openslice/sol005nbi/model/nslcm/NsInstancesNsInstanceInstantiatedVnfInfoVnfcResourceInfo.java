/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents the information on virtualised compute and storage resources used by a VNFC in a VNF instance. 
 */
@Schema(description = "This type represents the information on virtualised compute and storage resources used by a VNFC in a VNF instance. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("vduId")
  private String vduId = null;

  @JsonProperty("computeResource")
  private NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle computeResource = null;

  @JsonProperty("storageResourceIds")
  private List<String> storageResourceIds = null;

  @JsonProperty("reservationId")
  private String reservationId = null;

  @JsonProperty("vnfcCpInfo")
  private List<NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo> vnfcCpInfo = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return id
  **/
  @Schema(required = true, description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo vduId(String vduId) {
    this.vduId = vduId;
    return this;
  }

   /**
   * Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. 
   * @return vduId
  **/
  @Schema(required = true, description = "Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. ")
  public String getVduId() {
    return vduId;
  }

  public void setVduId(String vduId) {
    this.vduId = vduId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo computeResource(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle computeResource) {
    this.computeResource = computeResource;
    return this;
  }

   /**
   * Get computeResource
   * @return computeResource
  **/
  @Schema(required = true, description = "")
  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle getComputeResource() {
    return computeResource;
  }

  public void setComputeResource(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle computeResource) {
    this.computeResource = computeResource;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo storageResourceIds(List<String> storageResourceIds) {
    this.storageResourceIds = storageResourceIds;
    return this;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo addStorageResourceIdsItem(String storageResourceIdsItem) {
    if (this.storageResourceIds == null) {
      this.storageResourceIds = new ArrayList<>();
    }
    this.storageResourceIds.add(storageResourceIdsItem);
    return this;
  }

   /**
   * References to the VirtualStorage resources. The value refers to a VirtualStorageResourceInfo item in the VnfInstance. 
   * @return storageResourceIds
  **/
  @Schema(description = "References to the VirtualStorage resources. The value refers to a VirtualStorageResourceInfo item in the VnfInstance. ")
  public List<String> getStorageResourceIds() {
    return storageResourceIds;
  }

  public void setStorageResourceIds(List<String> storageResourceIds) {
    this.storageResourceIds = storageResourceIds;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return reservationId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo vnfcCpInfo(List<NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo> vnfcCpInfo) {
    this.vnfcCpInfo = vnfcCpInfo;
    return this;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo addVnfcCpInfoItem(NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo vnfcCpInfoItem) {
    if (this.vnfcCpInfo == null) {
      this.vnfcCpInfo = new ArrayList<>();
    }
    this.vnfcCpInfo.add(vnfcCpInfoItem);
    return this;
  }

   /**
   * CPs of the VNFC instance. Shall be present when that particular CP of the VNFC instance is associated to an external CP of the VNF instance. May be present otherwise. 
   * @return vnfcCpInfo
  **/
  @Schema(description = "CPs of the VNFC instance. Shall be present when that particular CP of the VNFC instance is associated to an external CP of the VNF instance. May be present otherwise. ")
  public List<NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo> getVnfcCpInfo() {
    return vnfcCpInfo;
  }

  public void setVnfcCpInfo(List<NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo> vnfcCpInfo) {
    this.vnfcCpInfo = vnfcCpInfo;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. 
   * @return metadata
  **/
  @Schema(description = "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. ")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo = (NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo) o;
    return Objects.equals(this.id, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.id) &&
        Objects.equals(this.vduId, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.vduId) &&
        Objects.equals(this.computeResource, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.computeResource) &&
        Objects.equals(this.storageResourceIds, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.storageResourceIds) &&
        Objects.equals(this.reservationId, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.reservationId) &&
        Objects.equals(this.vnfcCpInfo, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.vnfcCpInfo) &&
        Objects.equals(this.metadata, nsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, vduId, computeResource, storageResourceIds, reservationId, vnfcCpInfo, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceInstantiatedVnfInfoVnfcResourceInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    vduId: ").append(toIndentedString(vduId)).append("\n");
    sb.append("    computeResource: ").append(toIndentedString(computeResource)).append("\n");
    sb.append("    storageResourceIds: ").append(toIndentedString(storageResourceIds)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    vnfcCpInfo: ").append(toIndentedString(vnfcCpInfo)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
