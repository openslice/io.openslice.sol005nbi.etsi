/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("cpdId")
  private String cpdId = null;

  @JsonProperty("vnfExtCpId")
  private String vnfExtCpId = null;

  @JsonProperty("cpProtocolInfo")
  private List<NsInstancesNsInstanceInstantiatedVnfInfoCpProtocolInfo> cpProtocolInfo = null;

  @JsonProperty("vnfLinkPortId")
  private String vnfLinkPortId = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return id
  **/
  @Schema(required = true, description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo cpdId(String cpdId) {
    this.cpdId = cpdId;
    return this;
  }

   /**
   * Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. 
   * @return cpdId
  **/
  @Schema(required = true, description = "Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. ")
  public String getCpdId() {
    return cpdId;
  }

  public void setCpdId(String cpdId) {
    this.cpdId = cpdId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo vnfExtCpId(String vnfExtCpId) {
    this.vnfExtCpId = vnfExtCpId;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return vnfExtCpId
  **/
  @Schema(description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getVnfExtCpId() {
    return vnfExtCpId;
  }

  public void setVnfExtCpId(String vnfExtCpId) {
    this.vnfExtCpId = vnfExtCpId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo cpProtocolInfo(List<NsInstancesNsInstanceInstantiatedVnfInfoCpProtocolInfo> cpProtocolInfo) {
    this.cpProtocolInfo = cpProtocolInfo;
    return this;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo addCpProtocolInfoItem(NsInstancesNsInstanceInstantiatedVnfInfoCpProtocolInfo cpProtocolInfoItem) {
    if (this.cpProtocolInfo == null) {
      this.cpProtocolInfo = new ArrayList<>();
    }
    this.cpProtocolInfo.add(cpProtocolInfoItem);
    return this;
  }

   /**
   * Network protocol information for this CP. 
   * @return cpProtocolInfo
  **/
  @Schema(description = "Network protocol information for this CP. ")
  public List<NsInstancesNsInstanceInstantiatedVnfInfoCpProtocolInfo> getCpProtocolInfo() {
    return cpProtocolInfo;
  }

  public void setCpProtocolInfo(List<NsInstancesNsInstanceInstantiatedVnfInfoCpProtocolInfo> cpProtocolInfo) {
    this.cpProtocolInfo = cpProtocolInfo;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo vnfLinkPortId(String vnfLinkPortId) {
    this.vnfLinkPortId = vnfLinkPortId;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return vnfLinkPortId
  **/
  @Schema(description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getVnfLinkPortId() {
    return vnfLinkPortId;
  }

  public void setVnfLinkPortId(String vnfLinkPortId) {
    this.vnfLinkPortId = vnfLinkPortId;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. 
   * @return metadata
  **/
  @Schema(description = "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. ")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo = (NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo) o;
    return Objects.equals(this.id, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.id) &&
        Objects.equals(this.cpdId, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.cpdId) &&
        Objects.equals(this.vnfExtCpId, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.vnfExtCpId) &&
        Objects.equals(this.cpProtocolInfo, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.cpProtocolInfo) &&
        Objects.equals(this.vnfLinkPortId, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.vnfLinkPortId) &&
        Objects.equals(this.metadata, nsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, cpdId, vnfExtCpId, cpProtocolInfo, vnfLinkPortId, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceInstantiatedVnfInfoVnfcCpInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cpdId: ").append(toIndentedString(cpdId)).append("\n");
    sb.append("    vnfExtCpId: ").append(toIndentedString(vnfExtCpId)).append("\n");
    sb.append("    cpProtocolInfo: ").append(toIndentedString(cpProtocolInfo)).append("\n");
    sb.append("    vnfLinkPortId: ").append(toIndentedString(vnfLinkPortId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
