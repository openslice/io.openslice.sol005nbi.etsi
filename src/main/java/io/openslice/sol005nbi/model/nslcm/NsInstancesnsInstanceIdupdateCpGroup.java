/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents describes a group of CPs and/or SAPs pairs associated to  the same position in an NFP. It shall comply with the provisions defined in  Table 6.5.3.71-1. 
 */
@Schema(description = "This type represents describes a group of CPs and/or SAPs pairs associated to  the same position in an NFP. It shall comply with the provisions defined in  Table 6.5.3.71-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdupdateCpGroup {
  @JsonProperty("cpPairInfo")
  private List<NsInstancesnsInstanceIdupdateCpPairInfo> cpPairInfo = null;

  /**
   * Identifies a rule to apply to forward traffic to the ingress CPs or SAPs of  the group. Permitted values: * ALL &#x3D; Traffic flows shall be forwarded simultaneously to all CPs or SAPs  of the group. * LB &#x3D; Traffic flows shall be forwarded to one CP or SAP of the group selected  based on a loadbalancing algorithm. 
   */
  public enum ForwardingBehaviourEnum {
    ALL("ALL"),
    LB("LB");

    private String value;

    ForwardingBehaviourEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ForwardingBehaviourEnum fromValue(String text) {
      for (ForwardingBehaviourEnum b : ForwardingBehaviourEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("forwardingBehaviour")
  private ForwardingBehaviourEnum forwardingBehaviour = null;

  @JsonProperty("forwardingBehaviourInputParameters")
  private NsInstancesnsInstanceIdupdateForwardingBehaviourInputParameters forwardingBehaviourInputParameters = null;

  public NsInstancesnsInstanceIdupdateCpGroup cpPairInfo(List<NsInstancesnsInstanceIdupdateCpPairInfo> cpPairInfo) {
    this.cpPairInfo = cpPairInfo;
    return this;
  }

  public NsInstancesnsInstanceIdupdateCpGroup addCpPairInfoItem(NsInstancesnsInstanceIdupdateCpPairInfo cpPairInfoItem) {
    if (this.cpPairInfo == null) {
      this.cpPairInfo = new ArrayList<>();
    }
    this.cpPairInfo.add(cpPairInfoItem);
    return this;
  }

   /**
   * One or more pair(s) of ingress and egress CPs or SAPs which the NFP passes by. All CP or SAP pairs in a group shall be instantiated from connection point  descriptors or service access point descriptors referenced in the corresponding  NfpPositionDesc. 
   * @return cpPairInfo
  **/
  @Schema(description = "One or more pair(s) of ingress and egress CPs or SAPs which the NFP passes by. All CP or SAP pairs in a group shall be instantiated from connection point  descriptors or service access point descriptors referenced in the corresponding  NfpPositionDesc. ")
  public List<NsInstancesnsInstanceIdupdateCpPairInfo> getCpPairInfo() {
    return cpPairInfo;
  }

  public void setCpPairInfo(List<NsInstancesnsInstanceIdupdateCpPairInfo> cpPairInfo) {
    this.cpPairInfo = cpPairInfo;
  }

  public NsInstancesnsInstanceIdupdateCpGroup forwardingBehaviour(ForwardingBehaviourEnum forwardingBehaviour) {
    this.forwardingBehaviour = forwardingBehaviour;
    return this;
  }

   /**
   * Identifies a rule to apply to forward traffic to the ingress CPs or SAPs of  the group. Permitted values: * ALL &#x3D; Traffic flows shall be forwarded simultaneously to all CPs or SAPs  of the group. * LB &#x3D; Traffic flows shall be forwarded to one CP or SAP of the group selected  based on a loadbalancing algorithm. 
   * @return forwardingBehaviour
  **/
  @Schema(description = "Identifies a rule to apply to forward traffic to the ingress CPs or SAPs of  the group. Permitted values: * ALL = Traffic flows shall be forwarded simultaneously to all CPs or SAPs  of the group. * LB = Traffic flows shall be forwarded to one CP or SAP of the group selected  based on a loadbalancing algorithm. ")
  public ForwardingBehaviourEnum getForwardingBehaviour() {
    return forwardingBehaviour;
  }

  public void setForwardingBehaviour(ForwardingBehaviourEnum forwardingBehaviour) {
    this.forwardingBehaviour = forwardingBehaviour;
  }

  public NsInstancesnsInstanceIdupdateCpGroup forwardingBehaviourInputParameters(NsInstancesnsInstanceIdupdateForwardingBehaviourInputParameters forwardingBehaviourInputParameters) {
    this.forwardingBehaviourInputParameters = forwardingBehaviourInputParameters;
    return this;
  }

   /**
   * Get forwardingBehaviourInputParameters
   * @return forwardingBehaviourInputParameters
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdupdateForwardingBehaviourInputParameters getForwardingBehaviourInputParameters() {
    return forwardingBehaviourInputParameters;
  }

  public void setForwardingBehaviourInputParameters(NsInstancesnsInstanceIdupdateForwardingBehaviourInputParameters forwardingBehaviourInputParameters) {
    this.forwardingBehaviourInputParameters = forwardingBehaviourInputParameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdupdateCpGroup nsInstancesnsInstanceIdupdateCpGroup = (NsInstancesnsInstanceIdupdateCpGroup) o;
    return Objects.equals(this.cpPairInfo, nsInstancesnsInstanceIdupdateCpGroup.cpPairInfo) &&
        Objects.equals(this.forwardingBehaviour, nsInstancesnsInstanceIdupdateCpGroup.forwardingBehaviour) &&
        Objects.equals(this.forwardingBehaviourInputParameters, nsInstancesnsInstanceIdupdateCpGroup.forwardingBehaviourInputParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpPairInfo, forwardingBehaviour, forwardingBehaviourInputParameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdupdateCpGroup {\n");
    
    sb.append("    cpPairInfo: ").append(toIndentedString(cpPairInfo)).append("\n");
    sb.append("    forwardingBehaviour: ").append(toIndentedString(forwardingBehaviour)).append("\n");
    sb.append("    forwardingBehaviourInputParameters: ").append(toIndentedString(forwardingBehaviourInputParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
