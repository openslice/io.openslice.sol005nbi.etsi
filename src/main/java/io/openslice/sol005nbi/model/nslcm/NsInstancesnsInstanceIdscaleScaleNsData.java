/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents the information to scale a NS. 
 */
@Schema(description = "This type represents the information to scale a NS. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdscaleScaleNsData {
  @JsonProperty("vnfInstanceToBeAdded")
  private List<NsInstancesnsInstanceIdinstantiateVnfInstanceData> vnfInstanceToBeAdded = null;

  @JsonProperty("vnfInstanceToBeRemoved")
  private List<String> vnfInstanceToBeRemoved = null;

  @JsonProperty("scaleNsByStepsData")
  private NsInstancesnsInstanceIdscaleScaleNsDataScaleNsByStepsData scaleNsByStepsData = null;

  @JsonProperty("scaleNsToLevelData")
  private NsInstancesnsInstanceIdscaleScaleNsDataScaleNsToLevelData scaleNsToLevelData = null;

  @JsonProperty("additionalParamsForNs")
  private NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf additionalParamsForNs = null;

  @JsonProperty("additionalParamsForVnf")
  private List<NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf> additionalParamsForVnf = null;

  @JsonProperty("locationConstraints")
  private List<NsInstancesnsInstanceIdinstantiateLocationConstraints1> locationConstraints = null;

  public NsInstancesnsInstanceIdscaleScaleNsData vnfInstanceToBeAdded(List<NsInstancesnsInstanceIdinstantiateVnfInstanceData> vnfInstanceToBeAdded) {
    this.vnfInstanceToBeAdded = vnfInstanceToBeAdded;
    return this;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData addVnfInstanceToBeAddedItem(NsInstancesnsInstanceIdinstantiateVnfInstanceData vnfInstanceToBeAddedItem) {
    if (this.vnfInstanceToBeAdded == null) {
      this.vnfInstanceToBeAdded = new ArrayList<>();
    }
    this.vnfInstanceToBeAdded.add(vnfInstanceToBeAddedItem);
    return this;
  }

   /**
   * An existing VNF instance to be added to the NS instance as part of the scaling operation. If needed, the VNF Profile to be used for this VNF instance may also be provided. 
   * @return vnfInstanceToBeAdded
  **/
  @Schema(description = "An existing VNF instance to be added to the NS instance as part of the scaling operation. If needed, the VNF Profile to be used for this VNF instance may also be provided. ")
  public List<NsInstancesnsInstanceIdinstantiateVnfInstanceData> getVnfInstanceToBeAdded() {
    return vnfInstanceToBeAdded;
  }

  public void setVnfInstanceToBeAdded(List<NsInstancesnsInstanceIdinstantiateVnfInstanceData> vnfInstanceToBeAdded) {
    this.vnfInstanceToBeAdded = vnfInstanceToBeAdded;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData vnfInstanceToBeRemoved(List<String> vnfInstanceToBeRemoved) {
    this.vnfInstanceToBeRemoved = vnfInstanceToBeRemoved;
    return this;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData addVnfInstanceToBeRemovedItem(String vnfInstanceToBeRemovedItem) {
    if (this.vnfInstanceToBeRemoved == null) {
      this.vnfInstanceToBeRemoved = new ArrayList<>();
    }
    this.vnfInstanceToBeRemoved.add(vnfInstanceToBeRemovedItem);
    return this;
  }

   /**
   * The VNF instance to be removed from the NS instance as part of the scaling operation. 
   * @return vnfInstanceToBeRemoved
  **/
  @Schema(description = "The VNF instance to be removed from the NS instance as part of the scaling operation. ")
  public List<String> getVnfInstanceToBeRemoved() {
    return vnfInstanceToBeRemoved;
  }

  public void setVnfInstanceToBeRemoved(List<String> vnfInstanceToBeRemoved) {
    this.vnfInstanceToBeRemoved = vnfInstanceToBeRemoved;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData scaleNsByStepsData(NsInstancesnsInstanceIdscaleScaleNsDataScaleNsByStepsData scaleNsByStepsData) {
    this.scaleNsByStepsData = scaleNsByStepsData;
    return this;
  }

   /**
   * Get scaleNsByStepsData
   * @return scaleNsByStepsData
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdscaleScaleNsDataScaleNsByStepsData getScaleNsByStepsData() {
    return scaleNsByStepsData;
  }

  public void setScaleNsByStepsData(NsInstancesnsInstanceIdscaleScaleNsDataScaleNsByStepsData scaleNsByStepsData) {
    this.scaleNsByStepsData = scaleNsByStepsData;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData scaleNsToLevelData(NsInstancesnsInstanceIdscaleScaleNsDataScaleNsToLevelData scaleNsToLevelData) {
    this.scaleNsToLevelData = scaleNsToLevelData;
    return this;
  }

   /**
   * Get scaleNsToLevelData
   * @return scaleNsToLevelData
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdscaleScaleNsDataScaleNsToLevelData getScaleNsToLevelData() {
    return scaleNsToLevelData;
  }

  public void setScaleNsToLevelData(NsInstancesnsInstanceIdscaleScaleNsDataScaleNsToLevelData scaleNsToLevelData) {
    this.scaleNsToLevelData = scaleNsToLevelData;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData additionalParamsForNs(NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf additionalParamsForNs) {
    this.additionalParamsForNs = additionalParamsForNs;
    return this;
  }

   /**
   * Get additionalParamsForNs
   * @return additionalParamsForNs
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf getAdditionalParamsForNs() {
    return additionalParamsForNs;
  }

  public void setAdditionalParamsForNs(NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf additionalParamsForNs) {
    this.additionalParamsForNs = additionalParamsForNs;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData additionalParamsForVnf(List<NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf> additionalParamsForVnf) {
    this.additionalParamsForVnf = additionalParamsForVnf;
    return this;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData addAdditionalParamsForVnfItem(NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf additionalParamsForVnfItem) {
    if (this.additionalParamsForVnf == null) {
      this.additionalParamsForVnf = new ArrayList<>();
    }
    this.additionalParamsForVnf.add(additionalParamsForVnfItem);
    return this;
  }

   /**
   * Allows the OSS/BSS to provide additional parameter(s) per VNF instance (as opposed to the NS level, which is covered in additionalParamforNs). This is for VNFs that are to be created by the NFVO as part of the NS scaling and not for existing VNF that are covered by the scaleVnfData. 
   * @return additionalParamsForVnf
  **/
  @Schema(description = "Allows the OSS/BSS to provide additional parameter(s) per VNF instance (as opposed to the NS level, which is covered in additionalParamforNs). This is for VNFs that are to be created by the NFVO as part of the NS scaling and not for existing VNF that are covered by the scaleVnfData. ")
  public List<NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf> getAdditionalParamsForVnf() {
    return additionalParamsForVnf;
  }

  public void setAdditionalParamsForVnf(List<NsInstancesnsInstanceIdinstantiateAdditionalParamsForVnf> additionalParamsForVnf) {
    this.additionalParamsForVnf = additionalParamsForVnf;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData locationConstraints(List<NsInstancesnsInstanceIdinstantiateLocationConstraints1> locationConstraints) {
    this.locationConstraints = locationConstraints;
    return this;
  }

  public NsInstancesnsInstanceIdscaleScaleNsData addLocationConstraintsItem(NsInstancesnsInstanceIdinstantiateLocationConstraints1 locationConstraintsItem) {
    if (this.locationConstraints == null) {
      this.locationConstraints = new ArrayList<>();
    }
    this.locationConstraints.add(locationConstraintsItem);
    return this;
  }

   /**
   * The location constraints for the VNF to be instantiated as part of the NS scaling. An example can be a constraint for the VNF to be in a specific geographic location. 
   * @return locationConstraints
  **/
  @Schema(description = "The location constraints for the VNF to be instantiated as part of the NS scaling. An example can be a constraint for the VNF to be in a specific geographic location. ")
  public List<NsInstancesnsInstanceIdinstantiateLocationConstraints1> getLocationConstraints() {
    return locationConstraints;
  }

  public void setLocationConstraints(List<NsInstancesnsInstanceIdinstantiateLocationConstraints1> locationConstraints) {
    this.locationConstraints = locationConstraints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdscaleScaleNsData nsInstancesnsInstanceIdscaleScaleNsData = (NsInstancesnsInstanceIdscaleScaleNsData) o;
    return Objects.equals(this.vnfInstanceToBeAdded, nsInstancesnsInstanceIdscaleScaleNsData.vnfInstanceToBeAdded) &&
        Objects.equals(this.vnfInstanceToBeRemoved, nsInstancesnsInstanceIdscaleScaleNsData.vnfInstanceToBeRemoved) &&
        Objects.equals(this.scaleNsByStepsData, nsInstancesnsInstanceIdscaleScaleNsData.scaleNsByStepsData) &&
        Objects.equals(this.scaleNsToLevelData, nsInstancesnsInstanceIdscaleScaleNsData.scaleNsToLevelData) &&
        Objects.equals(this.additionalParamsForNs, nsInstancesnsInstanceIdscaleScaleNsData.additionalParamsForNs) &&
        Objects.equals(this.additionalParamsForVnf, nsInstancesnsInstanceIdscaleScaleNsData.additionalParamsForVnf) &&
        Objects.equals(this.locationConstraints, nsInstancesnsInstanceIdscaleScaleNsData.locationConstraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vnfInstanceToBeAdded, vnfInstanceToBeRemoved, scaleNsByStepsData, scaleNsToLevelData, additionalParamsForNs, additionalParamsForVnf, locationConstraints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdscaleScaleNsData {\n");
    
    sb.append("    vnfInstanceToBeAdded: ").append(toIndentedString(vnfInstanceToBeAdded)).append("\n");
    sb.append("    vnfInstanceToBeRemoved: ").append(toIndentedString(vnfInstanceToBeRemoved)).append("\n");
    sb.append("    scaleNsByStepsData: ").append(toIndentedString(scaleNsByStepsData)).append("\n");
    sb.append("    scaleNsToLevelData: ").append(toIndentedString(scaleNsToLevelData)).append("\n");
    sb.append("    additionalParamsForNs: ").append(toIndentedString(additionalParamsForNs)).append("\n");
    sb.append("    additionalParamsForVnf: ").append(toIndentedString(additionalParamsForVnf)).append("\n");
    sb.append("    locationConstraints: ").append(toIndentedString(locationConstraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
