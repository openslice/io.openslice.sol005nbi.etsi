/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents defines the information to scale a VNF instance  to a given level, or to scale a VNF instance by steps. 
 */
@Schema(description = "This type represents defines the information to scale a VNF instance  to a given level, or to scale a VNF instance by steps. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdscaleScaleVnfData {
  @JsonProperty("vnfInstanceid")
  private String vnfInstanceid = null;

  /**
   * Type of the scale VNF operation requested. Allowed values are: - SCALE_OUT - SCALE_IN - SCALE_TO_INSTANTIATION_LEVEL - SCALE_TO_SCALE_LEVEL(S) The set of types actually supported depends on the capabilities of the VNF being managed. 
   */
  public enum ScaleVnfTypeEnum {
    OUT("SCALE_OUT"),
    IN("SCALE_IN"),
    TO_INSTANTIATION_LEVEL("SCALE_TO_INSTANTIATION_LEVEL"),
    TO_SCALE_LEVEL_S_("SCALE_TO_SCALE_LEVEL(S)");

    private String value;

    ScaleVnfTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ScaleVnfTypeEnum fromValue(String text) {
      for (ScaleVnfTypeEnum b : ScaleVnfTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("scaleVnfType")
  private ScaleVnfTypeEnum scaleVnfType = null;

  @JsonProperty("scaleToLevelData")
  private NsInstancesnsInstanceIdscaleScaleToLevelData scaleToLevelData = null;

  @JsonProperty("scaleByStepData")
  private NsInstancesnsInstanceIdscaleScaleByStepData scaleByStepData = null;

  public NsInstancesnsInstanceIdscaleScaleVnfData vnfInstanceid(String vnfInstanceid) {
    this.vnfInstanceid = vnfInstanceid;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return vnfInstanceid
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getVnfInstanceid() {
    return vnfInstanceid;
  }

  public void setVnfInstanceid(String vnfInstanceid) {
    this.vnfInstanceid = vnfInstanceid;
  }

  public NsInstancesnsInstanceIdscaleScaleVnfData scaleVnfType(ScaleVnfTypeEnum scaleVnfType) {
    this.scaleVnfType = scaleVnfType;
    return this;
  }

   /**
   * Type of the scale VNF operation requested. Allowed values are: - SCALE_OUT - SCALE_IN - SCALE_TO_INSTANTIATION_LEVEL - SCALE_TO_SCALE_LEVEL(S) The set of types actually supported depends on the capabilities of the VNF being managed. 
   * @return scaleVnfType
  **/
  @Schema(required = true, description = "Type of the scale VNF operation requested. Allowed values are: - SCALE_OUT - SCALE_IN - SCALE_TO_INSTANTIATION_LEVEL - SCALE_TO_SCALE_LEVEL(S) The set of types actually supported depends on the capabilities of the VNF being managed. ")
  public ScaleVnfTypeEnum getScaleVnfType() {
    return scaleVnfType;
  }

  public void setScaleVnfType(ScaleVnfTypeEnum scaleVnfType) {
    this.scaleVnfType = scaleVnfType;
  }

  public NsInstancesnsInstanceIdscaleScaleVnfData scaleToLevelData(NsInstancesnsInstanceIdscaleScaleToLevelData scaleToLevelData) {
    this.scaleToLevelData = scaleToLevelData;
    return this;
  }

   /**
   * Get scaleToLevelData
   * @return scaleToLevelData
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdscaleScaleToLevelData getScaleToLevelData() {
    return scaleToLevelData;
  }

  public void setScaleToLevelData(NsInstancesnsInstanceIdscaleScaleToLevelData scaleToLevelData) {
    this.scaleToLevelData = scaleToLevelData;
  }

  public NsInstancesnsInstanceIdscaleScaleVnfData scaleByStepData(NsInstancesnsInstanceIdscaleScaleByStepData scaleByStepData) {
    this.scaleByStepData = scaleByStepData;
    return this;
  }

   /**
   * Get scaleByStepData
   * @return scaleByStepData
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdscaleScaleByStepData getScaleByStepData() {
    return scaleByStepData;
  }

  public void setScaleByStepData(NsInstancesnsInstanceIdscaleScaleByStepData scaleByStepData) {
    this.scaleByStepData = scaleByStepData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdscaleScaleVnfData nsInstancesnsInstanceIdscaleScaleVnfData = (NsInstancesnsInstanceIdscaleScaleVnfData) o;
    return Objects.equals(this.vnfInstanceid, nsInstancesnsInstanceIdscaleScaleVnfData.vnfInstanceid) &&
        Objects.equals(this.scaleVnfType, nsInstancesnsInstanceIdscaleScaleVnfData.scaleVnfType) &&
        Objects.equals(this.scaleToLevelData, nsInstancesnsInstanceIdscaleScaleVnfData.scaleToLevelData) &&
        Objects.equals(this.scaleByStepData, nsInstancesnsInstanceIdscaleScaleVnfData.scaleByStepData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vnfInstanceid, scaleVnfType, scaleToLevelData, scaleByStepData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdscaleScaleVnfData {\n");
    
    sb.append("    vnfInstanceid: ").append(toIndentedString(vnfInstanceid)).append("\n");
    sb.append("    scaleVnfType: ").append(toIndentedString(scaleVnfType)).append("\n");
    sb.append("    scaleToLevelData: ").append(toIndentedString(scaleToLevelData)).append("\n");
    sb.append("    scaleByStepData: ").append(toIndentedString(scaleByStepData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
