/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents an external VL. It shall comply with the provisions defined in Table 6.5.3.26-1. 
 */
@Schema(description = "This type represents an external VL. It shall comply with the provisions defined in Table 6.5.3.26-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdupdateExtVirtualLinks {
  @JsonProperty("extVirtualLinkId")
  private String extVirtualLinkId = null;

  @JsonProperty("vimId")
  private String vimId = null;

  @JsonProperty("resourceProviderId")
  private String resourceProviderId = null;

  @JsonProperty("resourceId")
  private String resourceId = null;

  @JsonProperty("extCps")
  private List<NsInstancesnsInstanceIdupdateExtCps> extCps = new ArrayList<>();

  @JsonProperty("extLinkPorts")
  private List<NsInstancesnsInstanceIdupdateExtLinkPorts> extLinkPorts = null;

  public NsInstancesnsInstanceIdupdateExtVirtualLinks extVirtualLinkId(String extVirtualLinkId) {
    this.extVirtualLinkId = extVirtualLinkId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return extVirtualLinkId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getExtVirtualLinkId() {
    return extVirtualLinkId;
  }

  public void setExtVirtualLinkId(String extVirtualLinkId) {
    this.extVirtualLinkId = extVirtualLinkId;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks vimId(String vimId) {
    this.vimId = vimId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return vimId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getVimId() {
    return vimId;
  }

  public void setVimId(String vimId) {
    this.vimId = vimId;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks resourceProviderId(String resourceProviderId) {
    this.resourceProviderId = resourceProviderId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return resourceProviderId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getResourceProviderId() {
    return resourceProviderId;
  }

  public void setResourceProviderId(String resourceProviderId) {
    this.resourceProviderId = resourceProviderId;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. 
   * @return resourceId
  **/
  @Schema(required = true, description = "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. ")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks extCps(List<NsInstancesnsInstanceIdupdateExtCps> extCps) {
    this.extCps = extCps;
    return this;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks addExtCpsItem(NsInstancesnsInstanceIdupdateExtCps extCpsItem) {
    this.extCps.add(extCpsItem);
    return this;
  }

   /**
   * External CPs of the VNF to be connected to this external VL. 
   * @return extCps
  **/
  @Schema(required = true, description = "External CPs of the VNF to be connected to this external VL. ")
  public List<NsInstancesnsInstanceIdupdateExtCps> getExtCps() {
    return extCps;
  }

  public void setExtCps(List<NsInstancesnsInstanceIdupdateExtCps> extCps) {
    this.extCps = extCps;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks extLinkPorts(List<NsInstancesnsInstanceIdupdateExtLinkPorts> extLinkPorts) {
    this.extLinkPorts = extLinkPorts;
    return this;
  }

  public NsInstancesnsInstanceIdupdateExtVirtualLinks addExtLinkPortsItem(NsInstancesnsInstanceIdupdateExtLinkPorts extLinkPortsItem) {
    if (this.extLinkPorts == null) {
      this.extLinkPorts = new ArrayList<>();
    }
    this.extLinkPorts.add(extLinkPortsItem);
    return this;
  }

   /**
   * Externally provided link ports to be used to connect external connection points to this external VL. 
   * @return extLinkPorts
  **/
  @Schema(description = "Externally provided link ports to be used to connect external connection points to this external VL. ")
  public List<NsInstancesnsInstanceIdupdateExtLinkPorts> getExtLinkPorts() {
    return extLinkPorts;
  }

  public void setExtLinkPorts(List<NsInstancesnsInstanceIdupdateExtLinkPorts> extLinkPorts) {
    this.extLinkPorts = extLinkPorts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdupdateExtVirtualLinks nsInstancesnsInstanceIdupdateExtVirtualLinks = (NsInstancesnsInstanceIdupdateExtVirtualLinks) o;
    return Objects.equals(this.extVirtualLinkId, nsInstancesnsInstanceIdupdateExtVirtualLinks.extVirtualLinkId) &&
        Objects.equals(this.vimId, nsInstancesnsInstanceIdupdateExtVirtualLinks.vimId) &&
        Objects.equals(this.resourceProviderId, nsInstancesnsInstanceIdupdateExtVirtualLinks.resourceProviderId) &&
        Objects.equals(this.resourceId, nsInstancesnsInstanceIdupdateExtVirtualLinks.resourceId) &&
        Objects.equals(this.extCps, nsInstancesnsInstanceIdupdateExtVirtualLinks.extCps) &&
        Objects.equals(this.extLinkPorts, nsInstancesnsInstanceIdupdateExtVirtualLinks.extLinkPorts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extVirtualLinkId, vimId, resourceProviderId, resourceId, extCps, extLinkPorts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdupdateExtVirtualLinks {\n");
    
    sb.append("    extVirtualLinkId: ").append(toIndentedString(extVirtualLinkId)).append("\n");
    sb.append("    vimId: ").append(toIndentedString(vimId)).append("\n");
    sb.append("    resourceProviderId: ").append(toIndentedString(resourceProviderId)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    extCps: ").append(toIndentedString(extCps)).append("\n");
    sb.append("    extLinkPorts: ").append(toIndentedString(extLinkPorts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
