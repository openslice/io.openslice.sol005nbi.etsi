/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type specifies an existing nested NS instance to be used in the NS instance  and if needed, the NsProfile to use for this nested NS instance.  It shall comply with the provisions defined in Table 6.5.3.19a-1. 
 */
@Schema(description = "This type specifies an existing nested NS instance to be used in the NS instance  and if needed, the NsProfile to use for this nested NS instance.  It shall comply with the provisions defined in Table 6.5.3.19a-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdinstantiateNestedNsInstanceData {
  @JsonProperty("nestedNsInstanceId")
  private String nestedNsInstanceId = null;

  @JsonProperty("nsProfileId")
  private String nsProfileId = null;

  public NsInstancesnsInstanceIdinstantiateNestedNsInstanceData nestedNsInstanceId(String nestedNsInstanceId) {
    this.nestedNsInstanceId = nestedNsInstanceId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return nestedNsInstanceId
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getNestedNsInstanceId() {
    return nestedNsInstanceId;
  }

  public void setNestedNsInstanceId(String nestedNsInstanceId) {
    this.nestedNsInstanceId = nestedNsInstanceId;
  }

  public NsInstancesnsInstanceIdinstantiateNestedNsInstanceData nsProfileId(String nsProfileId) {
    this.nsProfileId = nsProfileId;
    return this;
  }

   /**
   * An identifier that is unique with respect to a NS. Representation: string of variable length. 
   * @return nsProfileId
  **/
  @Schema(description = "An identifier that is unique with respect to a NS. Representation: string of variable length. ")
  public String getNsProfileId() {
    return nsProfileId;
  }

  public void setNsProfileId(String nsProfileId) {
    this.nsProfileId = nsProfileId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdinstantiateNestedNsInstanceData nsInstancesnsInstanceIdinstantiateNestedNsInstanceData = (NsInstancesnsInstanceIdinstantiateNestedNsInstanceData) o;
    return Objects.equals(this.nestedNsInstanceId, nsInstancesnsInstanceIdinstantiateNestedNsInstanceData.nestedNsInstanceId) &&
        Objects.equals(this.nsProfileId, nsInstancesnsInstanceIdinstantiateNestedNsInstanceData.nsProfileId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nestedNsInstanceId, nsProfileId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdinstantiateNestedNsInstanceData {\n");
    
    sb.append("    nestedNsInstanceId: ").append(toIndentedString(nestedNsInstanceId)).append("\n");
    sb.append("    nsProfileId: ").append(toIndentedString(nsProfileId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
