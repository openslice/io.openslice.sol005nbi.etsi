/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type provides information about added, deleted, modified and temporary VLs. 
 */
@Schema(description = "This type provides information about added, deleted, modified and temporary VLs. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("virtualLinkDescId")
  private String virtualLinkDescId = null;

  /**
   * Signals the type of change. Permitted values: * ADDED * REMOVED * MODIFIED * TEMPORARY * LINK_PORT_ADDED * LINK_PORT_REMOVED For a temporary resource, an AffectedVirtualLink structure exists as long as the temporary resource exists. 
   */
  public enum ChangeTypeEnum {
    ADDED("ADDED"),
    REMOVED("REMOVED"),
    MODIFIED("MODIFIED"),
    TEMPORARY("TEMPORARY"),
    LINK_PORT_ADDED("LINK_PORT_ADDED"),
    LINK_PORT_REMOVED("LINK_PORT_REMOVED");

    private String value;

    ChangeTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ChangeTypeEnum fromValue(String text) {
      for (ChangeTypeEnum b : ChangeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("changeType")
  private ChangeTypeEnum changeType = null;

  @JsonProperty("networkResource")
  private NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle networkResource = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  public NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return id
  **/
  @Schema(required = true, description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls virtualLinkDescId(String virtualLinkDescId) {
    this.virtualLinkDescId = virtualLinkDescId;
    return this;
  }

   /**
   * Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. 
   * @return virtualLinkDescId
  **/
  @Schema(required = true, description = "Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD. ")
  public String getVirtualLinkDescId() {
    return virtualLinkDescId;
  }

  public void setVirtualLinkDescId(String virtualLinkDescId) {
    this.virtualLinkDescId = virtualLinkDescId;
  }

  public NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls changeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
    return this;
  }

   /**
   * Signals the type of change. Permitted values: * ADDED * REMOVED * MODIFIED * TEMPORARY * LINK_PORT_ADDED * LINK_PORT_REMOVED For a temporary resource, an AffectedVirtualLink structure exists as long as the temporary resource exists. 
   * @return changeType
  **/
  @Schema(required = true, description = "Signals the type of change. Permitted values: * ADDED * REMOVED * MODIFIED * TEMPORARY * LINK_PORT_ADDED * LINK_PORT_REMOVED For a temporary resource, an AffectedVirtualLink structure exists as long as the temporary resource exists. ")
  public ChangeTypeEnum getChangeType() {
    return changeType;
  }

  public void setChangeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
  }

  public NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls networkResource(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle networkResource) {
    this.networkResource = networkResource;
    return this;
  }

   /**
   * Get networkResource
   * @return networkResource
  **/
  @Schema(required = true, description = "")
  public NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle getNetworkResource() {
    return networkResource;
  }

  public void setNetworkResource(NsInstancesNsInstanceInstantiatedVnfInfoResourceHandle networkResource) {
    this.networkResource = networkResource;
  }

  public NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. 
   * @return metadata
  **/
  @Schema(description = "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. ")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls = (NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls) o;
    return Objects.equals(this.id, nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls.id) &&
        Objects.equals(this.virtualLinkDescId, nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls.virtualLinkDescId) &&
        Objects.equals(this.changeType, nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls.changeType) &&
        Objects.equals(this.networkResource, nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls.networkResource) &&
        Objects.equals(this.metadata, nsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, virtualLinkDescId, changeType, networkResource, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsLcmOpOccsNsLcmOpOccResourceChangesAffectedVls {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    virtualLinkDescId: ").append(toIndentedString(virtualLinkDescId)).append("\n");
    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    networkResource: ").append(toIndentedString(networkResource)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
