/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents an identifier of the CP or SAP instance.  It shall comply with the provisions defined in Table 6.5.3.56-1. 
 */
@Schema(description = "This type represents an identifier of the CP or SAP instance.  It shall comply with the provisions defined in Table 6.5.3.56-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceNsCpHandle {
  @JsonProperty("vnfInstanceId")
  private String vnfInstanceId = null;

  @JsonProperty("vnfExtCpInstanceId")
  private String vnfExtCpInstanceId = null;

  @JsonProperty("pnfInfoId")
  private String pnfInfoId = null;

  @JsonProperty("pnfExtCpInstanceId")
  private String pnfExtCpInstanceId = null;

  @JsonProperty("nsInstanceId")
  private String nsInstanceId = null;

  @JsonProperty("nsSapInstanceId")
  private String nsSapInstanceId = null;

  public NsInstancesNsInstanceNsCpHandle vnfInstanceId(String vnfInstanceId) {
    this.vnfInstanceId = vnfInstanceId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return vnfInstanceId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getVnfInstanceId() {
    return vnfInstanceId;
  }

  public void setVnfInstanceId(String vnfInstanceId) {
    this.vnfInstanceId = vnfInstanceId;
  }

  public NsInstancesNsInstanceNsCpHandle vnfExtCpInstanceId(String vnfExtCpInstanceId) {
    this.vnfExtCpInstanceId = vnfExtCpInstanceId;
    return this;
  }

   /**
   * An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. 
   * @return vnfExtCpInstanceId
  **/
  @Schema(description = "An identifier that is unique for the respective type within a VNF instance, but may not be globally unique. ")
  public String getVnfExtCpInstanceId() {
    return vnfExtCpInstanceId;
  }

  public void setVnfExtCpInstanceId(String vnfExtCpInstanceId) {
    this.vnfExtCpInstanceId = vnfExtCpInstanceId;
  }

  public NsInstancesNsInstanceNsCpHandle pnfInfoId(String pnfInfoId) {
    this.pnfInfoId = pnfInfoId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfInfoId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getPnfInfoId() {
    return pnfInfoId;
  }

  public void setPnfInfoId(String pnfInfoId) {
    this.pnfInfoId = pnfInfoId;
  }

  public NsInstancesNsInstanceNsCpHandle pnfExtCpInstanceId(String pnfExtCpInstanceId) {
    this.pnfExtCpInstanceId = pnfExtCpInstanceId;
    return this;
  }

   /**
   * An Identifier that is unique within respect to a PNF. Representation: string of variable length. 
   * @return pnfExtCpInstanceId
  **/
  @Schema(description = "An Identifier that is unique within respect to a PNF. Representation: string of variable length. ")
  public String getPnfExtCpInstanceId() {
    return pnfExtCpInstanceId;
  }

  public void setPnfExtCpInstanceId(String pnfExtCpInstanceId) {
    this.pnfExtCpInstanceId = pnfExtCpInstanceId;
  }

  public NsInstancesNsInstanceNsCpHandle nsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return nsInstanceId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getNsInstanceId() {
    return nsInstanceId;
  }

  public void setNsInstanceId(String nsInstanceId) {
    this.nsInstanceId = nsInstanceId;
  }

  public NsInstancesNsInstanceNsCpHandle nsSapInstanceId(String nsSapInstanceId) {
    this.nsSapInstanceId = nsSapInstanceId;
    return this;
  }

   /**
   * An identifier that is unique with respect to a NS. Representation: string of variable length. 
   * @return nsSapInstanceId
  **/
  @Schema(description = "An identifier that is unique with respect to a NS. Representation: string of variable length. ")
  public String getNsSapInstanceId() {
    return nsSapInstanceId;
  }

  public void setNsSapInstanceId(String nsSapInstanceId) {
    this.nsSapInstanceId = nsSapInstanceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceNsCpHandle nsInstancesNsInstanceNsCpHandle = (NsInstancesNsInstanceNsCpHandle) o;
    return Objects.equals(this.vnfInstanceId, nsInstancesNsInstanceNsCpHandle.vnfInstanceId) &&
        Objects.equals(this.vnfExtCpInstanceId, nsInstancesNsInstanceNsCpHandle.vnfExtCpInstanceId) &&
        Objects.equals(this.pnfInfoId, nsInstancesNsInstanceNsCpHandle.pnfInfoId) &&
        Objects.equals(this.pnfExtCpInstanceId, nsInstancesNsInstanceNsCpHandle.pnfExtCpInstanceId) &&
        Objects.equals(this.nsInstanceId, nsInstancesNsInstanceNsCpHandle.nsInstanceId) &&
        Objects.equals(this.nsSapInstanceId, nsInstancesNsInstanceNsCpHandle.nsSapInstanceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vnfInstanceId, vnfExtCpInstanceId, pnfInfoId, pnfExtCpInstanceId, nsInstanceId, nsSapInstanceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceNsCpHandle {\n");
    
    sb.append("    vnfInstanceId: ").append(toIndentedString(vnfInstanceId)).append("\n");
    sb.append("    vnfExtCpInstanceId: ").append(toIndentedString(vnfExtCpInstanceId)).append("\n");
    sb.append("    pnfInfoId: ").append(toIndentedString(pnfInfoId)).append("\n");
    sb.append("    pnfExtCpInstanceId: ").append(toIndentedString(pnfExtCpInstanceId)).append("\n");
    sb.append("    nsInstanceId: ").append(toIndentedString(nsInstanceId)).append("\n");
    sb.append("    nsSapInstanceId: ").append(toIndentedString(nsSapInstanceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
