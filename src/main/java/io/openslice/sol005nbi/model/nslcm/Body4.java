/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents request parameters for the \&quot;Heal NS\&quot; operation. This operation supports the healing of an NS instance, either by healing the complete NS instance or by healing one of more of the VNF instances that are part of this NS. It shall comply with the provisions defined in Table 6.5.2.13-1. Either the parameter healNsData or the parameter healVnfData, but not both shall be provided. 
 */
@Schema(description = "This type represents request parameters for the \"Heal NS\" operation. This operation supports the healing of an NS instance, either by healing the complete NS instance or by healing one of more of the VNF instances that are part of this NS. It shall comply with the provisions defined in Table 6.5.2.13-1. Either the parameter healNsData or the parameter healVnfData, but not both shall be provided. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class Body4 {
  @JsonProperty("healNsData")
  private NsInstancesnsInstanceIdhealHealNsData healNsData = null;

  @JsonProperty("healVnfData")
  private List<NsInstancesnsInstanceIdhealHealVnfData> healVnfData = null;

  public Body4 healNsData(NsInstancesnsInstanceIdhealHealNsData healNsData) {
    this.healNsData = healNsData;
    return this;
  }

   /**
   * Get healNsData
   * @return healNsData
  **/
  @Schema(description = "")
  public NsInstancesnsInstanceIdhealHealNsData getHealNsData() {
    return healNsData;
  }

  public void setHealNsData(NsInstancesnsInstanceIdhealHealNsData healNsData) {
    this.healNsData = healNsData;
  }

  public Body4 healVnfData(List<NsInstancesnsInstanceIdhealHealVnfData> healVnfData) {
    this.healVnfData = healVnfData;
    return this;
  }

  public Body4 addHealVnfDataItem(NsInstancesnsInstanceIdhealHealVnfData healVnfDataItem) {
    if (this.healVnfData == null) {
      this.healVnfData = new ArrayList<>();
    }
    this.healVnfData.add(healVnfDataItem);
    return this;
  }

   /**
   * Provides the information needed to heal a VNF. See note. 
   * @return healVnfData
  **/
  @Schema(description = "Provides the information needed to heal a VNF. See note. ")
  public List<NsInstancesnsInstanceIdhealHealVnfData> getHealVnfData() {
    return healVnfData;
  }

  public void setHealVnfData(List<NsInstancesnsInstanceIdhealHealVnfData> healVnfData) {
    this.healVnfData = healVnfData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body4 body4 = (Body4) o;
    return Objects.equals(this.healNsData, body4.healNsData) &&
        Objects.equals(this.healVnfData, body4.healVnfData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(healNsData, healVnfData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body4 {\n");
    
    sb.append("    healNsData: ").append(toIndentedString(healNsData)).append("\n");
    sb.append("    healVnfData: ").append(toIndentedString(healVnfData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
