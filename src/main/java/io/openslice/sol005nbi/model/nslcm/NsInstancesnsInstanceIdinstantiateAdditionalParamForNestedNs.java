/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type specifies additional parameters on a per-nested NS instance basis.  It shall comply with the provisions defined in Table 6.5.3.21a-1. 
 */
@Schema(description = "This type specifies additional parameters on a per-nested NS instance basis.  It shall comply with the provisions defined in Table 6.5.3.21a-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs {
  @JsonProperty("nsProfileId")
  private String nsProfileId = null;

  @JsonProperty("additionalParam")
  private List<Object> additionalParam = null;

  public NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs nsProfileId(String nsProfileId) {
    this.nsProfileId = nsProfileId;
    return this;
  }

   /**
   * An identifier that is unique within a NS descriptor. Representation: string of variable length. 
   * @return nsProfileId
  **/
  @Schema(required = true, description = "An identifier that is unique within a NS descriptor. Representation: string of variable length. ")
  public String getNsProfileId() {
    return nsProfileId;
  }

  public void setNsProfileId(String nsProfileId) {
    this.nsProfileId = nsProfileId;
  }

  public NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs additionalParam(List<Object> additionalParam) {
    this.additionalParam = additionalParam;
    return this;
  }

  public NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs addAdditionalParamItem(Object additionalParamItem) {
    if (this.additionalParam == null) {
      this.additionalParam = new ArrayList<>();
    }
    this.additionalParam.add(additionalParamItem);
    return this;
  }

   /**
   * Additional parameters that are to be applied on a per nested NS instance. 
   * @return additionalParam
  **/
  @Schema(description = "Additional parameters that are to be applied on a per nested NS instance. ")
  public List<Object> getAdditionalParam() {
    return additionalParam;
  }

  public void setAdditionalParam(List<Object> additionalParam) {
    this.additionalParam = additionalParam;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs nsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs = (NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs) o;
    return Objects.equals(this.nsProfileId, nsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs.nsProfileId) &&
        Objects.equals(this.additionalParam, nsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs.additionalParam);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nsProfileId, additionalParam);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesnsInstanceIdinstantiateAdditionalParamForNestedNs {\n");
    
    sb.append("    nsProfileId: ").append(toIndentedString(nsProfileId)).append("\n");
    sb.append("    additionalParam: ").append(toIndentedString(additionalParam)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
