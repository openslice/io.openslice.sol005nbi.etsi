/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents the information about a PNF that is part of an NS instance.  It shall comply with the provisions defined in Table 6.5.3.13-1. 
 */
@Schema(description = "This type represents the information about a PNF that is part of an NS instance.  It shall comply with the provisions defined in Table 6.5.3.13-1. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstancePnfInfo {
  @JsonProperty("pnfId")
  private String pnfId = null;

  @JsonProperty("pnfName")
  private String pnfName = null;

  @JsonProperty("pnfdId")
  private String pnfdId = null;

  @JsonProperty("pnfdInfoId")
  private String pnfdInfoId = null;

  @JsonProperty("pnfProfileId")
  private String pnfProfileId = null;

  @JsonProperty("cpInfo")
  private NsInstancesNsInstanceCpInfo cpInfo = null;

  public NsInstancesNsInstancePnfInfo pnfId(String pnfId) {
    this.pnfId = pnfId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfId
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getPnfId() {
    return pnfId;
  }

  public void setPnfId(String pnfId) {
    this.pnfId = pnfId;
  }

  public NsInstancesNsInstancePnfInfo pnfName(String pnfName) {
    this.pnfName = pnfName;
    return this;
  }

   /**
   * Name of the PNF. 
   * @return pnfName
  **/
  @Schema(description = "Name of the PNF. ")
  public String getPnfName() {
    return pnfName;
  }

  public void setPnfName(String pnfName) {
    this.pnfName = pnfName;
  }

  public NsInstancesNsInstancePnfInfo pnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfdId
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getPnfdId() {
    return pnfdId;
  }

  public void setPnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
  }

  public NsInstancesNsInstancePnfInfo pnfdInfoId(String pnfdInfoId) {
    this.pnfdInfoId = pnfdInfoId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfdInfoId
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getPnfdInfoId() {
    return pnfdInfoId;
  }

  public void setPnfdInfoId(String pnfdInfoId) {
    this.pnfdInfoId = pnfdInfoId;
  }

  public NsInstancesNsInstancePnfInfo pnfProfileId(String pnfProfileId) {
    this.pnfProfileId = pnfProfileId;
    return this;
  }

   /**
   * An identifier that is unique within a NS descriptor. Representation: string of variable length. 
   * @return pnfProfileId
  **/
  @Schema(required = true, description = "An identifier that is unique within a NS descriptor. Representation: string of variable length. ")
  public String getPnfProfileId() {
    return pnfProfileId;
  }

  public void setPnfProfileId(String pnfProfileId) {
    this.pnfProfileId = pnfProfileId;
  }

  public NsInstancesNsInstancePnfInfo cpInfo(NsInstancesNsInstanceCpInfo cpInfo) {
    this.cpInfo = cpInfo;
    return this;
  }

   /**
   * Get cpInfo
   * @return cpInfo
  **/
  @Schema(description = "")
  public NsInstancesNsInstanceCpInfo getCpInfo() {
    return cpInfo;
  }

  public void setCpInfo(NsInstancesNsInstanceCpInfo cpInfo) {
    this.cpInfo = cpInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstancePnfInfo nsInstancesNsInstancePnfInfo = (NsInstancesNsInstancePnfInfo) o;
    return Objects.equals(this.pnfId, nsInstancesNsInstancePnfInfo.pnfId) &&
        Objects.equals(this.pnfName, nsInstancesNsInstancePnfInfo.pnfName) &&
        Objects.equals(this.pnfdId, nsInstancesNsInstancePnfInfo.pnfdId) &&
        Objects.equals(this.pnfdInfoId, nsInstancesNsInstancePnfInfo.pnfdInfoId) &&
        Objects.equals(this.pnfProfileId, nsInstancesNsInstancePnfInfo.pnfProfileId) &&
        Objects.equals(this.cpInfo, nsInstancesNsInstancePnfInfo.cpInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pnfId, pnfName, pnfdId, pnfdInfoId, pnfProfileId, cpInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstancePnfInfo {\n");
    
    sb.append("    pnfId: ").append(toIndentedString(pnfId)).append("\n");
    sb.append("    pnfName: ").append(toIndentedString(pnfName)).append("\n");
    sb.append("    pnfdId: ").append(toIndentedString(pnfdId)).append("\n");
    sb.append("    pnfdInfoId: ").append(toIndentedString(pnfdInfoId)).append("\n");
    sb.append("    pnfProfileId: ").append(toIndentedString(pnfProfileId)).append("\n");
    sb.append("    cpInfo: ").append(toIndentedString(cpInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
