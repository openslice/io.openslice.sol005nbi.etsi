/*
 * SOL005 - NS Lifecycle Management Interface
 * SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 1.3.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nslcm;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-28T00:48:29.393+02:00[Europe/Athens]")
public class NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses {
  /**
   * The type of the IP addresses. Permitted values: IPV4, IPV6. 
   */
  public enum TypeEnum {
    IPV4("IPV4"),
    IPV6("IPV6");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("addresses")
  private List<String> addresses = null;

  @JsonProperty("isDynamic")
  private Boolean isDynamic = null;

  @JsonProperty("addressRange")
  private NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetAddressRange addressRange = null;

  @JsonProperty("subnetId")
  private String subnetId = null;

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the IP addresses. Permitted values: IPV4, IPV6. 
   * @return type
  **/
  @Schema(required = true, description = "The type of the IP addresses. Permitted values: IPV4, IPV6. ")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses addresses(List<String> addresses) {
    this.addresses = addresses;
    return this;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses addAddressesItem(String addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Fixed addresses assigned (from the subnet defined by \&quot;subnetId\&quot; if provided). 
   * @return addresses
  **/
  @Schema(description = "Fixed addresses assigned (from the subnet defined by \"subnetId\" if provided). ")
  public List<String> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<String> addresses) {
    this.addresses = addresses;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses isDynamic(Boolean isDynamic) {
    this.isDynamic = isDynamic;
    return this;
  }

   /**
   * Indicates whether this set of addresses was assigned dynamically (true) or based on address information provided as input from the API consumer (false). Shall be present if \&quot;addresses\&quot; is present and shall be absent otherwise. 
   * @return isDynamic
  **/
  @Schema(description = "Indicates whether this set of addresses was assigned dynamically (true) or based on address information provided as input from the API consumer (false). Shall be present if \"addresses\" is present and shall be absent otherwise. ")
  public Boolean isIsDynamic() {
    return isDynamic;
  }

  public void setIsDynamic(Boolean isDynamic) {
    this.isDynamic = isDynamic;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses addressRange(NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetAddressRange addressRange) {
    this.addressRange = addressRange;
    return this;
  }

   /**
   * Get addressRange
   * @return addressRange
  **/
  @Schema(description = "")
  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetAddressRange getAddressRange() {
    return addressRange;
  }

  public void setAddressRange(NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetAddressRange addressRange) {
    this.addressRange = addressRange;
  }

  public NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. 
   * @return subnetId
  **/
  @Schema(description = "An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance. Representation: string of variable length. ")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses = (NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses) o;
    return Objects.equals(this.type, nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses.type) &&
        Objects.equals(this.addresses, nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses.addresses) &&
        Objects.equals(this.isDynamic, nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses.isDynamic) &&
        Objects.equals(this.addressRange, nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses.addressRange) &&
        Objects.equals(this.subnetId, nsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses.subnetId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, addresses, isDynamic, addressRange, subnetId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NsInstancesNsInstanceInstantiatedVnfInfoIpOverEthernetIpAddresses {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    isDynamic: ").append(toIndentedString(isDynamic)).append("\n");
    sb.append("    addressRange: ").append(toIndentedString(addressRange)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
