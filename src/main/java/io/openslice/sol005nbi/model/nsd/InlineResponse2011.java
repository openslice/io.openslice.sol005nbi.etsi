/*
 * SOL005 - NSD Management Interface
 * SOL005 - NSD Management Interface  IMPORTANT: Please note that this file might be not aligned to the current version of the ETSI Group Specification it refers to and has not been approved by the ETSI NFV ISG. In case of discrepancies the published ETSI Group Specification takes precedence. Please report bugs to https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis 
 *
 * OpenAPI spec version: 2.0.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.openslice.sol005nbi.model.nsd;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This type represents a response for the query PNFD operation. 
 */
@Schema(description = "This type represents a response for the query PNFD operation. ")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-03-31T22:46:27.985+03:00[Europe/Athens]")
public class InlineResponse2011 {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("pnfdId")
  private String pnfdId = null;

  @JsonProperty("pnfdName")
  private String pnfdName = null;

  @JsonProperty("pnfdersion")
  private String pnfdersion = null;

  @JsonProperty("pnfdProvider")
  private String pnfdProvider = null;

  @JsonProperty("pnfdInvariantId")
  private String pnfdInvariantId = null;

  /**
   * Signals the security option used by the PNFD archive as defined in clause 5.1 of ETSI GS NFV SOL 004. Valid values: OPTION_1, OPTION_2 
   */
  public enum ArchiveSecurityOptionEnum {
    _1("OPTION_1"),
    _2("OPTION_2");

    private String value;

    ArchiveSecurityOptionEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ArchiveSecurityOptionEnum fromValue(String text) {
      for (ArchiveSecurityOptionEnum b : ArchiveSecurityOptionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("archiveSecurityOption")
  private ArchiveSecurityOptionEnum archiveSecurityOption = null;

  @JsonProperty("signingCertificate")
  private String signingCertificate = null;

  @JsonProperty("artifacts")
  private List<PnfDescriptorsArtifacts> artifacts = null;

  /**
   * The enumeration PnfdOnboardingStateType shall comply with the provisions defined in Table 5.5.4.6-1 of GS-NFV SOL005. It indicates the on-boarding state of the individual PNF descriptor resource. CREATED &#x3D; The PNF descriptor resource has been created. UPLOADING &#x3D; The associated PNFD content is being uploaded. PROCESSING &#x3D; The associated PNFD content is being processed, e.g. validation. ONBOARDED &#x3D; The associated PNFD content has been on-boarded. ERROR &#x3D; There was an error during upload or processing of the associated PNFD content. 
   */
  public enum PnfdOnboardingStateEnum {
    CREATED("CREATED"),
    UPLOADING("UPLOADING"),
    PROCESSING("PROCESSING"),
    ONBOARDING("ONBOARDING"),
    ERROR("ERROR");

    private String value;

    PnfdOnboardingStateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PnfdOnboardingStateEnum fromValue(String text) {
      for (PnfdOnboardingStateEnum b : PnfdOnboardingStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("pnfdOnboardingState")
  private PnfdOnboardingStateEnum pnfdOnboardingState = null;

  @JsonProperty("onboardingFailureDetails")
  private InlineResponse400 onboardingFailureDetails = null;

  /**
   * The enumeration PnfdUsageStateType shall comply with the provisions defined in Table 5.5.4.7-1 of GS NFV-SOL005. It indicates the usage state of the resource.IN-USE &#x3D; The resource is in use.NOT_IN_USE &#x3D; The resource is not-in-use. 
   */
  public enum PnfdUsageStateEnum {
    IN_USE("IN_USE"),
    NOT_IN_USE("NOT_IN_USE");

    private String value;

    PnfdUsageStateEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PnfdUsageStateEnum fromValue(String text) {
      for (PnfdUsageStateEnum b : PnfdUsageStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("pnfdUsageState")
  private PnfdUsageStateEnum pnfdUsageState = null;

  @JsonProperty("userDefinedData")
  private Object userDefinedData = null;

  @JsonProperty("_links")
  private PnfDescriptorsLinks _links = null;

  public InlineResponse2011 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return id
  **/
  @Schema(required = true, description = "An identifier with the intention of being globally unique. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse2011 pnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfdId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getPnfdId() {
    return pnfdId;
  }

  public void setPnfdId(String pnfdId) {
    this.pnfdId = pnfdId;
  }

  public InlineResponse2011 pnfdName(String pnfdName) {
    this.pnfdName = pnfdName;
    return this;
  }

   /**
   * Name of the on-boarded PNFD. This information is copied from the PNFD content and shall be present after the PNFD content is on-boarded. 
   * @return pnfdName
  **/
  @Schema(description = "Name of the on-boarded PNFD. This information is copied from the PNFD content and shall be present after the PNFD content is on-boarded. ")
  public String getPnfdName() {
    return pnfdName;
  }

  public void setPnfdName(String pnfdName) {
    this.pnfdName = pnfdName;
  }

  public InlineResponse2011 pnfdersion(String pnfdersion) {
    this.pnfdersion = pnfdersion;
    return this;
  }

   /**
   * A Version. Representation: string of variable length. 
   * @return pnfdersion
  **/
  @Schema(description = "A Version. Representation: string of variable length. ")
  public String getPnfdersion() {
    return pnfdersion;
  }

  public void setPnfdersion(String pnfdersion) {
    this.pnfdersion = pnfdersion;
  }

  public InlineResponse2011 pnfdProvider(String pnfdProvider) {
    this.pnfdProvider = pnfdProvider;
    return this;
  }

   /**
   * Provider of the on-boarded PNFD. This information is copied from the PNFD content and shall be present after the PNFD content is on-boarded. 
   * @return pnfdProvider
  **/
  @Schema(description = "Provider of the on-boarded PNFD. This information is copied from the PNFD content and shall be present after the PNFD content is on-boarded. ")
  public String getPnfdProvider() {
    return pnfdProvider;
  }

  public void setPnfdProvider(String pnfdProvider) {
    this.pnfdProvider = pnfdProvider;
  }

  public InlineResponse2011 pnfdInvariantId(String pnfdInvariantId) {
    this.pnfdInvariantId = pnfdInvariantId;
    return this;
  }

   /**
   * An identifier with the intention of being globally unique. 
   * @return pnfdInvariantId
  **/
  @Schema(description = "An identifier with the intention of being globally unique. ")
  public String getPnfdInvariantId() {
    return pnfdInvariantId;
  }

  public void setPnfdInvariantId(String pnfdInvariantId) {
    this.pnfdInvariantId = pnfdInvariantId;
  }

  public InlineResponse2011 archiveSecurityOption(ArchiveSecurityOptionEnum archiveSecurityOption) {
    this.archiveSecurityOption = archiveSecurityOption;
    return this;
  }

   /**
   * Signals the security option used by the PNFD archive as defined in clause 5.1 of ETSI GS NFV SOL 004. Valid values: OPTION_1, OPTION_2 
   * @return archiveSecurityOption
  **/
  @Schema(description = "Signals the security option used by the PNFD archive as defined in clause 5.1 of ETSI GS NFV SOL 004. Valid values: OPTION_1, OPTION_2 ")
  public ArchiveSecurityOptionEnum getArchiveSecurityOption() {
    return archiveSecurityOption;
  }

  public void setArchiveSecurityOption(ArchiveSecurityOptionEnum archiveSecurityOption) {
    this.archiveSecurityOption = archiveSecurityOption;
  }

  public InlineResponse2011 signingCertificate(String signingCertificate) {
    this.signingCertificate = signingCertificate;
    return this;
  }

   /**
   * A string as defined in IETF RFC 8259. 
   * @return signingCertificate
  **/
  @Schema(description = "A string as defined in IETF RFC 8259. ")
  public String getSigningCertificate() {
    return signingCertificate;
  }

  public void setSigningCertificate(String signingCertificate) {
    this.signingCertificate = signingCertificate;
  }

  public InlineResponse2011 artifacts(List<PnfDescriptorsArtifacts> artifacts) {
    this.artifacts = artifacts;
    return this;
  }

  public InlineResponse2011 addArtifactsItem(PnfDescriptorsArtifacts artifactsItem) {
    if (this.artifacts == null) {
      this.artifacts = new ArrayList<>();
    }
    this.artifacts.add(artifactsItem);
    return this;
  }

   /**
   * Information about PNFD archive artifacts contained in the PNFD archive. This attribute shall not be present before the PNFD archive content is on-boarded. Otherwise, this attribute shall be present if the PNFD archive contains artifacts. 
   * @return artifacts
  **/
  @Schema(description = "Information about PNFD archive artifacts contained in the PNFD archive. This attribute shall not be present before the PNFD archive content is on-boarded. Otherwise, this attribute shall be present if the PNFD archive contains artifacts. ")
  public List<PnfDescriptorsArtifacts> getArtifacts() {
    return artifacts;
  }

  public void setArtifacts(List<PnfDescriptorsArtifacts> artifacts) {
    this.artifacts = artifacts;
  }

  public InlineResponse2011 pnfdOnboardingState(PnfdOnboardingStateEnum pnfdOnboardingState) {
    this.pnfdOnboardingState = pnfdOnboardingState;
    return this;
  }

   /**
   * The enumeration PnfdOnboardingStateType shall comply with the provisions defined in Table 5.5.4.6-1 of GS-NFV SOL005. It indicates the on-boarding state of the individual PNF descriptor resource. CREATED &#x3D; The PNF descriptor resource has been created. UPLOADING &#x3D; The associated PNFD content is being uploaded. PROCESSING &#x3D; The associated PNFD content is being processed, e.g. validation. ONBOARDED &#x3D; The associated PNFD content has been on-boarded. ERROR &#x3D; There was an error during upload or processing of the associated PNFD content. 
   * @return pnfdOnboardingState
  **/
  @Schema(required = true, description = "The enumeration PnfdOnboardingStateType shall comply with the provisions defined in Table 5.5.4.6-1 of GS-NFV SOL005. It indicates the on-boarding state of the individual PNF descriptor resource. CREATED = The PNF descriptor resource has been created. UPLOADING = The associated PNFD content is being uploaded. PROCESSING = The associated PNFD content is being processed, e.g. validation. ONBOARDED = The associated PNFD content has been on-boarded. ERROR = There was an error during upload or processing of the associated PNFD content. ")
  public PnfdOnboardingStateEnum getPnfdOnboardingState() {
    return pnfdOnboardingState;
  }

  public void setPnfdOnboardingState(PnfdOnboardingStateEnum pnfdOnboardingState) {
    this.pnfdOnboardingState = pnfdOnboardingState;
  }

  public InlineResponse2011 onboardingFailureDetails(InlineResponse400 onboardingFailureDetails) {
    this.onboardingFailureDetails = onboardingFailureDetails;
    return this;
  }

   /**
   * Get onboardingFailureDetails
   * @return onboardingFailureDetails
  **/
  @Schema(description = "")
  public InlineResponse400 getOnboardingFailureDetails() {
    return onboardingFailureDetails;
  }

  public void setOnboardingFailureDetails(InlineResponse400 onboardingFailureDetails) {
    this.onboardingFailureDetails = onboardingFailureDetails;
  }

  public InlineResponse2011 pnfdUsageState(PnfdUsageStateEnum pnfdUsageState) {
    this.pnfdUsageState = pnfdUsageState;
    return this;
  }

   /**
   * The enumeration PnfdUsageStateType shall comply with the provisions defined in Table 5.5.4.7-1 of GS NFV-SOL005. It indicates the usage state of the resource.IN-USE &#x3D; The resource is in use.NOT_IN_USE &#x3D; The resource is not-in-use. 
   * @return pnfdUsageState
  **/
  @Schema(required = true, description = "The enumeration PnfdUsageStateType shall comply with the provisions defined in Table 5.5.4.7-1 of GS NFV-SOL005. It indicates the usage state of the resource.IN-USE = The resource is in use.NOT_IN_USE = The resource is not-in-use. ")
  public PnfdUsageStateEnum getPnfdUsageState() {
    return pnfdUsageState;
  }

  public void setPnfdUsageState(PnfdUsageStateEnum pnfdUsageState) {
    this.pnfdUsageState = pnfdUsageState;
  }

  public InlineResponse2011 userDefinedData(Object userDefinedData) {
    this.userDefinedData = userDefinedData;
    return this;
  }

   /**
   * This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. 
   * @return userDefinedData
  **/
  @Schema(description = "This type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key- value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 7159. ")
  public Object getUserDefinedData() {
    return userDefinedData;
  }

  public void setUserDefinedData(Object userDefinedData) {
    this.userDefinedData = userDefinedData;
  }

  public InlineResponse2011 _links(PnfDescriptorsLinks _links) {
    this._links = _links;
    return this;
  }

   /**
   * Get _links
   * @return _links
  **/
  @Schema(required = true, description = "")
  public PnfDescriptorsLinks getLinks() {
    return _links;
  }

  public void setLinks(PnfDescriptorsLinks _links) {
    this._links = _links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2011 inlineResponse2011 = (InlineResponse2011) o;
    return Objects.equals(this.id, inlineResponse2011.id) &&
        Objects.equals(this.pnfdId, inlineResponse2011.pnfdId) &&
        Objects.equals(this.pnfdName, inlineResponse2011.pnfdName) &&
        Objects.equals(this.pnfdersion, inlineResponse2011.pnfdersion) &&
        Objects.equals(this.pnfdProvider, inlineResponse2011.pnfdProvider) &&
        Objects.equals(this.pnfdInvariantId, inlineResponse2011.pnfdInvariantId) &&
        Objects.equals(this.archiveSecurityOption, inlineResponse2011.archiveSecurityOption) &&
        Objects.equals(this.signingCertificate, inlineResponse2011.signingCertificate) &&
        Objects.equals(this.artifacts, inlineResponse2011.artifacts) &&
        Objects.equals(this.pnfdOnboardingState, inlineResponse2011.pnfdOnboardingState) &&
        Objects.equals(this.onboardingFailureDetails, inlineResponse2011.onboardingFailureDetails) &&
        Objects.equals(this.pnfdUsageState, inlineResponse2011.pnfdUsageState) &&
        Objects.equals(this.userDefinedData, inlineResponse2011.userDefinedData) &&
        Objects.equals(this._links, inlineResponse2011._links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, pnfdId, pnfdName, pnfdersion, pnfdProvider, pnfdInvariantId, archiveSecurityOption, signingCertificate, artifacts, pnfdOnboardingState, onboardingFailureDetails, pnfdUsageState, userDefinedData, _links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2011 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pnfdId: ").append(toIndentedString(pnfdId)).append("\n");
    sb.append("    pnfdName: ").append(toIndentedString(pnfdName)).append("\n");
    sb.append("    pnfdersion: ").append(toIndentedString(pnfdersion)).append("\n");
    sb.append("    pnfdProvider: ").append(toIndentedString(pnfdProvider)).append("\n");
    sb.append("    pnfdInvariantId: ").append(toIndentedString(pnfdInvariantId)).append("\n");
    sb.append("    archiveSecurityOption: ").append(toIndentedString(archiveSecurityOption)).append("\n");
    sb.append("    signingCertificate: ").append(toIndentedString(signingCertificate)).append("\n");
    sb.append("    artifacts: ").append(toIndentedString(artifacts)).append("\n");
    sb.append("    pnfdOnboardingState: ").append(toIndentedString(pnfdOnboardingState)).append("\n");
    sb.append("    onboardingFailureDetails: ").append(toIndentedString(onboardingFailureDetails)).append("\n");
    sb.append("    pnfdUsageState: ").append(toIndentedString(pnfdUsageState)).append("\n");
    sb.append("    userDefinedData: ").append(toIndentedString(userDefinedData)).append("\n");
    sb.append("    _links: ").append(toIndentedString(_links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
